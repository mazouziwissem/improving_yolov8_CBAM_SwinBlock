# # Ultralytics 🚀 AGPL-3.0 License - https://ultralytics.com/license

# # Ultralytics YOLOv8 object detection model with P3/8 - P5/32 outputs
# # Model docs: https://docs.ultralytics.com/models/yolov8
# # Task docs: https://docs.ultralytics.com/tasks/detect

# # Parameters
# nc: 80 # number of classes
# scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
#   # [depth, width, max_channels]
#   n: [0.33, 0.25, 1024] # YOLOv8n summary: 129 layers, 3157200 parameters, 3157184 gradients, 8.9 GFLOPS
#   s: [0.33, 0.50, 1024] # YOLOv8s summary: 129 layers, 11166560 parameters, 11166544 gradients, 28.8 GFLOPS
#   m: [0.67, 0.75, 768] # YOLOv8m summary: 169 layers, 25902640 parameters, 25902624 gradients, 79.3 GFLOPS
#   l: [1.00, 1.00, 512] # YOLOv8l summary: 209 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPS
#   x: [1.00, 1.25, 512] # YOLOv8x summary: 209 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPS

# # YOLOv8.0n backbone
# backbone:
#   # [from, repeats, module, args]
#   - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
#   - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
#   - [-1, 3, C2f, [128, True]]
#   - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
#   - [-1, 6, C2f, [256, True]]
#   - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16
#   - [-1, 6, C2f, [512, True]]
#   - [-1, 1, Conv, [1024, 3, 2]] # 7-P5/32
#   - [-1, 3, C2f, [1024, True]]
#   - [-1, 1, SPPF, [1024, 5]] # 9

# # YOLOv8.0n head
# head:
#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 6], 1, Concat, [1]] # cat backbone P4
#   - [-1, 3, C2f, [512]] # 12

#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
#   - [[-1, 4], 1, Concat, [1]] # cat backbone P3
#   - [-1, 3, C2f, [256]] # 15 (P3/8-small)

#   - [-1, 1, Conv, [256, 3, 2]]
#   - [[-1, 12], 1, Concat, [1]] # cat head P4
#   - [-1, 3, C2f, [512]] # 18 (P4/16-medium)

#   - [-1, 1, Conv, [512, 3, 2]]
#   - [[-1, 9], 1, Concat, [1]] # cat head P5
#   - [-1, 3, C2f, [1024]] # 21 (P5/32-large)

#   - [[15, 18, 21], 1, Detect, [nc]] # Detect(P3, P4, P5)


# Ultralytics YOLOv8 + SwinBlock intégré

# # Nombre de classes
# nc: 1  # à modifier selon ton dataset

# # Échelles de modèle
# scales:
#   n: [0.33, 0.25, 1024]
#   s: [0.33, 0.50, 1024]
#   m: [0.67, 0.75, 768]
#   l: [1.00, 1.00, 512]
#   x: [1.00, 1.25, 512]

# # Backbone avec SwinBlock inséré après le bloc C2f initial
# backbone:
#   - [-1, 1, Conv, [64, 3, 2]]            # 0-P1/2
#   - [-1, 1, Conv, [128, 3, 2]]           # 1-P2/4
#   - [-1, 3, C2f, [128, True]]            # 2
#   - [-1, 1, SwinBlock, [32]] 
#   #- [-1, 1, SwinBlock, [128]]            # 3 ← ton SwinBlock custom ici
#   - [-1, 1, Conv, [256, 3, 2]]           # 4-P3/8
#   - [-1, 6, C2f, [256, True]]            # 5
#   - [-1, 1, Conv, [512, 3, 2]]           # 6-P4/16
#   - [-1, 6, C2f, [512, True]]            # 7
#   - [-1, 1, Conv, [1024, 3, 2]]          # 8-P5/32
#   - [-1, 3, C2f, [1024, True]]           # 9
#   - [-1, 1, SPPF, [1024, 5]]             # 10

# # Head
# head:
#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]   # 11
#   - [[-1, 6], 1, Concat, [1]]                    # 12
#   - [-1, 3, C2f, [512]]                          # 13

#   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]   # 14
#   - [[-1, 4], 1, Concat, [1]]                    # 15
#   - [-1, 3, C2f, [256]]                          # 16

#   - [-1, 1, Conv, [256, 3, 2]]                   # 17
#   - [[-1, 13], 1, Concat, [1]]                   # 18
#   - [-1, 3, C2f, [512]]                          # 19

#   - [-1, 1, Conv, [512, 3, 2]]                   # 20
#   - [[-1, 10], 1, Concat, [1]]                   # 21
#   - [-1, 3, C2f, [1024]]                         # 22

#   - [[16, 19, 22], 1, Detect, [nc]]              # 23


nc: 1  # nombre de classes

scales:
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]

backbone:
  # Downsampling
  - [-1, 1, Conv, [32, 3, 2]]               # 0 - P1/2
  - [-1, 1, Conv, [64, 3, 2]]                # 1 - P2/4
  - [-1, 3, C2f, [64, True]]                 # 2 - Output 64 channels
  - [-1, 1, SwinBlock, [32]]                 # 3 - conserve 64 channels

  - [-1, 1, Conv, [128, 3, 2]]               # 4 - P3/8
  - [-1, 4, C2f, [128, True]]                # 5
  - [-1, 1, CBAM, [128]]                     # 6

  - [-1, 1, Conv, [256, 3, 2]]               # 7 - P4/16
  - [-1, 4, C2f, [256, True]]                # 8
  - [-1, 1, SwinBlock, [256]]                # 9
  - [-1, 1, CBAM, [256]]                     # 10

  - [-1, 1, Conv, [512, 3, 2]]               # 11 - P5/32
  - [-1, 3, C2f, [512, True]]                # 12
  - [-1, 1, CBAM, [512]]                     # 13

head:
  - [-1, 1, nn.Upsample, [None, 2, "bilinear", True]]  # 14 - Upsample 512 -> 256
  - [[-1, 10], 1, Concat, [1]]                        # 15 - (512 upsampled + 256)
  - [-1, 3, C2f, [256]]                               # 16

  - [-1, 1, nn.Upsample, [None, 2, "bilinear", True]]  # 17
  - [[-1, 6], 1, Concat, [1]]                         # 18 - (256 upsampled + 128)
  - [-1, 3, C2f, [128]]                               # 19

  - [-1, 1, nn.Upsample, [None, 2, "bilinear", True]]  # 20
  - [[-1, 3], 1, Concat, [1]]                         # 21 - (128 upsampled + 64)
  - [-1, 3, C2f, [64]]                                # 22

  - [[22, 19, 16], 1, Detect, [nc]]                   # 23



